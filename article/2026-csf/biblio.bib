@misc{blackshear2020resources,
      title={Resources: A Safe Language Abstraction for Money},
      author={Sam Blackshear and David L. Dill and Shaz Qadeer and Clark W. Barrett and John C. Mitchell and Oded Padon and Yoni Zohar},
      year={2020},
      eprint={2004.05106},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}

@book{jvm,
  author    = {Tim Lindholm and
               Frank Yellin},
  title     = {The {J}ava Virtual Machine Specification},
  publisher = {Addison-Wesley},
  year      = {1997},
}

@MISC{clr,
    author = {Erik Meijer and Redmond Wa and John Gough},
    title = {Technical Overview of the Common Language Runtime},
    year = {2000}
}

@inproceedings{DBLP:conf/popl/CoughlinC14,
  author    = {Devin Coughlin and
               Bor{-}Yuh Evan Chang},
  editor    = {Suresh Jagannathan and
               Peter Sewell},
  title     = {Fissile type analysis: modular checking of almost everywhere invariants},
  booktitle = {The 41st Annual {ACM} {SIGPLAN-SIGACT} Symposium on Principles of
               Programming Languages, {POPL} '14, San Diego, CA, USA, January 20-21,
               2014},
  pages     = {73--86},
  publisher = {{ACM}},
  year      = {2014},
  url       = {https://doi.org/10.1145/2535838.2535855},
  doi       = {10.1145/2535838.2535855},
  timestamp = {Tue, 06 Nov 2018 11:07:42 +0100},
  biburl    = {https://dblp.org/rec/conf/popl/CoughlinC14.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/cav/ZhongCQGBPZBD20,
  author    = {Jingyi Emma Zhong and
               Kevin Cheang and
               Shaz Qadeer and
               Wolfgang Grieskamp and
               Sam Blackshear and
               Junkil Park and
               Yoni Zohar and
               Clark W. Barrett and
               David L. Dill},
  editor    = {Shuvendu K. Lahiri and
               Chao Wang},
  title     = {The Move Prover},
  booktitle = {Computer Aided Verification - 32nd International Conference, {CAV}
               2020, Los Angeles, CA, USA, July 21-24, 2020, Proceedings, Part {I}},
  series    = {Lecture Notes in Computer Science},
  volume    = {12224},
  pages     = {137--150},
  publisher = {Springer},
  year      = {2020},
  url       = {https://doi.org/10.1007/978-3-030-53288-8\_7},
  doi       = {10.1007/978-3-030-53288-8\_7},
  timestamp = {Wed, 12 Aug 2020 15:15:43 +0200},
  biburl    = {https://dblp.org/rec/conf/cav/ZhongCQGBPZBD20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{davidcaps,
  author    = {David Swasey and Deepak Garg and Derek Dreyer.},
  title     = {Robust and Compositional Verification of Object Capability Patterns},
  booktitle = {Proceedings of the 2017 {ACM} {SIGPLAN} International Conference on
               Object-Oriented Programming, Systems, Languages, and Applications,
               {OOPSLA} 2017. October 22 - 27, 2017},
  pages     = {},
  year      = {2017},
}


@article{tydisa,
 author = {Fournet, C{\'e}dric and Gordon, Andrew D. and Maffeis, Sergio},
 title = {A Type Discipline for Authorization Policies},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {August 2007},
 volume = {29},
 number = {5},
 month = aug,
 year = {2007},
 issn = {0164-0925},
 articleno = {25},
 url = {http://doi.acm.org/10.1145/1275497.1275500},
 doi = {10.1145/1275497.1275500},
 acmid = {1275500},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Authorization, process calculus, spi calculus, type systems},
}
@article{autysec,
 author = {Gordon, Andrew D. and Jeffrey, Alan},
 title = {Authenticity by Typing for Security Protocols},
 journal = {J. Comput. Secur.},
 issue_date = {July 2003},
 volume = {11},
 number = {4},
 month = jul,
 year = {2003},
 issn = {0926-227X},
 pages = {451--519},
 numpages = {69},
 url = {http://dl.acm.org/citation.cfm?id=959088.959090},
 acmid = {959090},
 publisher = {IOS Press},
 address = {Amsterdam, The Netherlands, The Netherlands},
}

@misc{move_white,
  author = {Sam Blackshear and Evan Cheng and David L. Dill and Victor Gao and Ben Maurer and Todd Nowacki and Alistair Pott and Shaz Qadeer and Rain and Dario Russi and Stephane Sezer and Tim Zakian and Runtian Zhou},
  title = {Move: A Language With Programmable Resources},
  howpublished = {\url{https://developers.libra.org/docs/move-paper}},
  year={2019}
}

@misc{libra_blockchain_white,
  author = {Zachary Amsden and Ramnik Arora and Shehar Bano and Mathieu Baudet and Sam Blackshear and Abhay Bothra and George Cabrera and Christian Catalini and Konstantinos Chalkias and Evan Cheng and Avery Ching and Andrey Chursin and George Danezis and Gerardo Di Giacomo and David L. Dill and Hui Ding and Nick Doudchenko and Victor Gao and Zhenhuan Gao and Fran√ßois Garillot and Michael Gorven and Philip Hayes and J. Mark Hou and Yuxuan Hu and Kevin Hurley and Kevin Lewi and Chunqi Li and Zekun Li and Dahlia Malkhi and Sonia Margulis and Ben Maurer and Payman Mohassel and Ladi de Naurois and Valeria Nikolaenko and Todd Nowacki and Oleksandr Orlov and Dmitri Perelman and Alistair Pott and Brett Proctor and Shaz Qadeer and Rain and Dario Russi and Bryan Schwab and Stephane Sezer and Alberto Sonnino and Herman Venter and Lei Wei and Nils Wernerfelt and Brandon Williams and Qinfan Wu and Xifan Yan and Tim Zakian and Runtian Zhou},
  title = {The {L}ibra {B}lockchain},
  howpublished = {\url{https://developers.libra.org/docs/the-libra-blockchain-paper}},
  year={2019}
}

@misc{re_dao,
  author = {Vitalik Buterin},
  title = {Critical update re {DAO}},
  url = {https://ethereum.github.io/blog/2016/06/17/critical-update-re-dao-vulnerability},
  year = {2016},
}

@misc{sc_best_practices,
  author = {Consensys},
  title = {Smart Contract Best Practices},
  url = {https://consensys.github.io/smart-contract-best-practices/known_attacks},
  year = {2021},
}

@inproceedings{DBLP:conf/sp/WatsonWNMACDDGL15,
  author    = {Robert N. M. Watson and
               Jonathan Woodruff and
               Peter G. Neumann and
               Simon W. Moore and
               Jonathan Anderson and
               David Chisnall and
               Nirav H. Dave and
               Brooks Davis and
               Khilan Gudka and
               Ben Laurie and
               Steven J. Murdoch and
               Robert M. Norton and
               Michael Roe and
               Stacey D. Son and
               Munraj Vadera},
  title     = {{CHERI:} {A} Hybrid Capability-System Architecture for Scalable Software
               Compartmentalization},
  booktitle = {2015 {IEEE} Symposium on Security and Privacy, {SP} 2015, San Jose,
               CA, USA, May 17-21, 2015},
  pages     = {20--37},
  publisher = {{IEEE} Computer Society},
  year      = {2015},
  url       = {https://doi.org/10.1109/SP.2015.9},
  doi       = {10.1109/SP.2015.9},
  timestamp = {Fri, 09 Apr 2021 18:46:07 +0200},
  biburl    = {https://dblp.org/rec/conf/sp/WatsonWNMACDDGL15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@TECHREPORT{Miller03capabilitymyths,
    author = {Mark Miller and Ka-Ping Yee and Jonathan Shapiro},
    title = {Capability Myths Demolished},
    institution = {},
    year = {2003}
}

@inproceedings{DBLP:conf/fmco/BarnettCDJL05,
  author    = {Michael Barnett and
               Bor{-}Yuh Evan Chang and
               Robert DeLine and
               Bart Jacobs and
               K. Rustan M. Leino},
  editor    = {Frank S. de Boer and
               Marcello M. Bonsangue and
               Susanne Graf and
               Willem P. de Roever},
  title     = {Boogie: {A} Modular Reusable Verifier for Object-Oriented Programs},
  booktitle = {Formal Methods for Components and Objects, 4th International Symposium,
               {FMCO} 2005, Amsterdam, The Netherlands, November 1-4, 2005, Revised
               Lectures},
  series    = {Lecture Notes in Computer Science},
  volume    = {4111},
  pages     = {364--387},
  publisher = {Springer},
  year      = {2005},
  url       = {https://doi.org/10.1007/11804192\_17},
  doi       = {10.1007/11804192\_17},
  timestamp = {Tue, 14 May 2019 10:00:53 +0200},
  biburl    = {https://dblp.org/rec/conf/fmco/BarnettCDJL05.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/tacas/MouraB08,
  author    = {Leonardo Mendon{\c{c}}a de Moura and
               Nikolaj Bj{\o}rner},
  editor    = {C. R. Ramakrishnan and
               Jakob Rehof},
  title     = {{Z3:} An Efficient {SMT} Solver},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems,
               14th International Conference, {TACAS} 2008, Held as Part of the Joint
               European Conferences on Theory and Practice of Software, {ETAPS} 2008,
               Budapest, Hungary, March 29-April 6, 2008. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {4963},
  pages     = {337--340},
  publisher = {Springer},
  year      = {2008},
  url       = {https://doi.org/10.1007/978-3-540-78800-3\_24},
  doi       = {10.1007/978-3-540-78800-3\_24},
  timestamp = {Tue, 14 May 2019 10:00:53 +0200},
  biburl    = {https://dblp.org/rec/conf/tacas/MouraB08.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{ot4jc,
author={Patrignani, Marco and Clarke, Dave and Sangiorgi, Davide},
title={Ownership {T}ypes for the {J}oin {C}alculus},
year={2011},
series={LNCS},
volume={6722},
pages={289-303},
booktitle={FMOODS/FORTE 2011},
location={Reykjavik, Iceland}
}

@article{theoryFexpr,
 author = {Wand, Mitchell},
 title = {The Theory of Fexprs is Trivial},
 journal = {Lisp and Symbolic Computation},
 volume = {10},
 year = {1998},
 issn = {0892-4635},
 pages = {189--199},
 numpages = {11},
 url = {http://dx.doi.org/10.1023/A:1007720632734},
 doi = {10.1023/A:1007720632734},
 acmid = {305403},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {contextual equivalence, fexprs, reflection},
}


@article{linearhs,
author = {Bernardy, Jean-Philippe and Boespflug, Mathieu and Newton, Ryan R. and Peyton Jones, Simon and Spiwack, Arnaud},
title = {Linear Haskell: Practical Linearity in a Higher-Order Polymorphic Language},
year = {2017},
issue_date = {January 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {POPL},
url = {https://doi.org/10.1145/3158093},
doi = {10.1145/3158093},
abstract = {Linear type systems have a long and storied history, but not a clear path forward
to integrate with existing languages such as OCaml or Haskell. In this paper, we study
a linear type system designed with two crucial properties in mind: backwards-compatibility
and code reuse across linear and non-linear users of a library. Only then can the
benefits of linear types permeate conventional functional programming. Rather than
bifurcate types into linear and non-linear counterparts, we instead attach linearity
to function arrows. Linear functions can receive inputs from linearly-bound values,
but can also operate over unrestricted, regular values. To demonstrate the efficacy
of our linear type system&nbsp;‚Äî&nbsp;both how easy it can be integrated in an existing language
implementation and how streamlined it makes it to write programs with linear types&nbsp;‚Äî&nbsp;we
implemented our type system in ghc, the leading Haskell compiler, and demonstrate
two kinds of applications of linear types: mutable data with pure interfaces; and
enforcing protocols in I/O-performing functions.},
journal = {Proc. ACM Program. Lang.},
month = dec,
articleno = {5},
numpages = {29},
keywords = {Haskell, polymorphism, GHC, linear types, linear logic, laziness, typestate}
}

@INPROCEEDINGS{Wadler90lineartypes,
    author = {Philip Wadler},
    title = {Linear Types Can Change the World!},
    booktitle = {PROGRAMMING CONCEPTS AND METHODS},
    year = {1990},
}
@book{bookpi,
author = {Sangiorgi, Davide and Walker, David},
title = {PI-Calculus: A Theory of Mobile Processes},
year = {2001},
isbn = {0521781779},
publisher = {Cambridge University Press},
address = {USA},
abstract = {From the Publisher:Mobile systems, whose components communicate and change their structure,
now pervade the informational world and the wider world of which it is a part. The
science of mobile systems is as yet immature, however. This book presents the pi-calculus,
a theory of mobile systems. The pi-calculus provides a conceptual framework for understanding
mobility, and mathematical tools for expressing systems and reasoning about their
behaviors. The book serves both as a reference for the theory and as an extended demonstration
of how to use pi-calculus to describe systems and analyze their properties. It covers
the basic theory of pi-calculus, typed pi-calculi, higher-order processes, the relationship
between pi-calculus and lambda-calculus, and applications of pi-calculus to object-oriented
design and programming. The book is written at the graduate level, assuming no prior
acquaintance with the subject, and is intended for computer scientists interested
in mobile systems.}
}


@article{refty-sec-impl,
 author = {Bengtson, Jesper and Bhargavan, Karthikeyan and Fournet, C{\'e}dric and Gordon, Andrew D. and Maffeis, Sergio},
 title = {Refinement Types for Secure Implementations},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {January 2011},
 volume = {33},
 number = {2},
 month = feb,
 year = {2011},
 issn = {0164-0925},
 pages = {8:1--8:45},
 articleno = {8},
 numpages = {45},
 url = {http://doi.acm.org/10.1145/1890028.1890031},
 doi = {10.1145/1890028.1890031},
 acmid = {1890031},
 publisher = {ACM},
 address = {New York, NY, USA},
}
@article{catalin-rs,
  author    = {Michael Backes and
               Catalin Hritcu and
               Matteo Maffei},
  title     = {Union, intersection and refinement types and reasoning about type
               disjointness for secure protocol implementations},
  journal   = {Journal of Computer Security},
  volume    = {22},
  number    = {2},
  pages     = {301--353},
  year      = {2014},
  url       = {http://dx.doi.org/10.3233/JCS-130493},
  doi       = {10.3233/JCS-130493},
  timestamp = {Fri, 02 Jan 2015 14:47:12 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/jcs/BackesHM14},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}
@article{dg-rs,
  author    = {Sammler, Michael and Garg, Deepak and Dreyer, Derek and Litak, Tadeusz },
  title     = {The high-level benefits of low-level sandboxing},
  journal   = {{PACMPL}},
  volume    = {4},
  number    = {{POPL}},
  pages     = {32:1--32:32},
  year      = {2020},
  url       = {https://doi.org/10.1145/3371100},
  doi       = {10.1145/3371100},
}

@inproceedings{domicaps,
  author    = {Dominique Devriese and
               Lars Birkedal and
               Frank Piessens},
  title     = {Reasoning about Object Capabilities with Logical Relations and Effect
               Parametricity},
  booktitle = {{IEEE} European Symposium on Security and Privacy, EuroS{\&}P
               2016, Saarbr{\"{u}}cken, Germany, March 21-24, 2016},
  pages     = {147--162},
  year      = {2016},
}
@article{sec-typ-prot,
author = {Abadi, Mart\'{\i}n},
title = {Secrecy by Typing in Security Protocols},
year = {1999},
issue_date = {Sept. 1999},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {46},
number = {5},
issn = {0004-5411},
url = {https://doi.org/10.1145/324133.324266},
doi = {10.1145/324133.324266},
abstract = {We develop principles and rules for achieving secrecy properties in security protocols. Our approach is based on traditional classification techniques, and extends those techniques to handle concurrent processes that use shared-key cryptography. The rules have the form of typing rules for a basic concurrent language with cryptographic primitives, the spi calculus. They guarantee that, if a protocol typechecks, then it does not leak its secret inputs.},
journal = {J. ACM},
month = sep,
pages = {749-786},
numpages = {38},
keywords = {cryptographic protocols, secrecy properties, process calculi}
}
@Inbook{cca,
author="Maffeis, Sergio
and Abadi, Mart{\'i}n
and Fournet, C{\'e}dric
and Gordon, Andrew D.",
editor="Jajodia, Sushil
and Lopez, Javier",
title="Code-Carrying Authorization",
bookTitle="Computer Security - ESORICS 2008: 13th European Symposium on Research in Computer Security, M{\'a}laga, Spain, October 6-8, 2008. Proceedings",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="563--579",
isbn="978-3-540-88313-5",
doi="10.1007/978-3-540-88313-5_36",
url="http://dx.doi.org/10.1007/978-3-540-88313-5_36"
}
@article{rs-orig,
author = {Grumberg, Orna and Long, David E.},
title = {Model Checking and Modular Verification},
year = {1994},
issue_date = {May 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {3},
issn = {0164-0925},
url = {https://doi.org/10.1145/177492.177725},
doi = {10.1145/177492.177725},
abstract = {We describe a framework for compositional verification of finite-state processes.
The framework is based on two ideas: a subset of the logic CTL for which satisfaction
is preserved under composition, and a preorder on structures which captures the relation
between a component and a system containing the component. Satisfaction of a formula
in the logic corresponds to being below a particular structure (a tableau for the
formula) in the preorder. We show how to do assume-guarantee-style reasoning within
this framework. Additionally, we demonstrate efficient methods for model checking
in the logic and for checking the preorder in several special cases. We have implemented
a system based on these methods, and we use it to give a compositional verification
of a CPU controller.},
journal = {ACM Trans. Program. Lang. Syst.},
month = may,
pages = {843‚Äì871},
numpages = {29},
keywords = {formal verification, computer-aided verification, model checking, CTL, temporal logics, Moore machines}
}
@article{iris,
  title={Iris from the ground up: A modular foundation for higher-order concurrent separation logic}, volume={28}, DOI={10.1017/S0956796818000151}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={Jung, Ralf and Krebbers, Robbert and Jourdan, Jacques-Henri and Bizjak, Ales and Birkedal, Lars and Dreyer, Derek}, year={2018}, pages={e20}}

@misc{moz,
  title={Script security},
  author={Mozilla},
  year={2019},
  note={Technical Report. https://developer.mozilla.org/en-US/docs/Mozilla/Gecko/Script\_security}
}
@misc{goog,
  title={Sandboxed Api},
  author={Google},
  year={2019},
  note={ https://github.com/google/sandboxed-api}
}

@article{rust,
 author = {Matsakis, Nicholas D. and Klock,II, Felix S.},
 title = {The Rust Language},
 journal = {Ada Lett.},
 issue_date = {December 2014},
 volume = {34},
 number = {3},
 month = oct,
 year = {2014},
 issn = {1094-3641},
 pages = {103--104},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/2692956.2663188},
 doi = {10.1145/2692956.2663188},
 acmid = {2663188},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {affine type systems, memory management, rust, systems programming},
}

@article{linear_logic,
  author    = {Jean{-}Yves Girard},
  title     = {Linear Logic},
  journal = {Theor. Comput. Sci.},
  year      = {1987},
}

@article{DBLP:journals/pacmpl/GrossmanAGMRSZ18,
  author    = {Shelly Grossman and
               Ittai Abraham and
               Guy Golan{-}Gueta and
               Yan Michalevsky and
               Noam Rinetzky and
               Mooly Sagiv and
               Yoni Zohar},
  title     = {Online detection of effectively callback free objects with applications
               to smart contracts},
  journal   = {Proc. {ACM} Program. Lang.},
  volume    = {2},
  number    = {{POPL}},
  pages     = {48:1--48:28},
  year      = {2018},
  url       = {https://doi.org/10.1145/3158136},
  doi       = {10.1145/3158136},
  timestamp = {Wed, 17 Feb 2021 08:54:11 +0100},
  biburl    = {https://dblp.org/rec/journals/pacmpl/GrossmanAGMRSZ18.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/pacmpl/AlbertGRRRS20,
  author    = {Elvira Albert and
               Shelly Grossman and
               Noam Rinetzky and
               Clara Rodr{\'{\i}}guez{-}N{\'{u}}{\~{n}}ez and
               Albert Rubio and
               Mooly Sagiv},
  title     = {Taming callbacks for smart contract modularity},
  journal   = {Proc. {ACM} Program. Lang.},
  volume    = {4},
  number    = {{OOPSLA}},
  pages     = {209:1--209:30},
  year      = {2020},
  url       = {https://doi.org/10.1145/3428277},
  doi       = {10.1145/3428277},
  timestamp = {Wed, 17 Feb 2021 08:54:09 +0100},
  biburl    = {https://dblp.org/rec/journals/pacmpl/AlbertGRRRS20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{solidity,
  author = {Ethereum Foundation},
  year = {2018},
  title = {Solidity Documentation},
  url = {http://solidity.readthedocs.io},
}

@article{evm,
  author = {Gavin Wood},
  title = {Ethereum: A secure decentralised generalised transaction ledger},
  year = {2014},
  url = {https://ethereum.github.io/yellowpaper/paper.pdf},
}

@article{DBLP:journals/pacmpl/SergeyNJ0TH19,
  author    = {Ilya Sergey and
               Vaivaswatha Nagaraj and
               Jacob Johannsen and
               Amrit Kumar and
               Anton Trunov and
               Ken Chan Guan Hao},
  title     = {Safer smart contract programming with Scilla},
  journal   = {Proc. {ACM} Program. Lang.},
  volume    = {3},
  number    = {{OOPSLA}},
  pages     = {185:1--185:30},
  year      = {2019},
  url       = {https://doi.org/10.1145/3360611},
  doi       = {10.1145/3360611},
  timestamp = {Wed, 17 Feb 2021 08:54:12 +0100},
  biburl    = {https://dblp.org/rec/journals/pacmpl/SergeyNJ0TH19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{singularity,
  author    = {James R. Larus and
               Galen C. Hunt},
  title     = {The Singularity system},
  journal   = {Commun. {ACM}},
  volume    = {53},
  number    = {8},
  pages     = {72--79},
  year      = {2010},
  url       = {https://doi.org/10.1145/1787234.1787253},
  doi       = {10.1145/1787234.1787253},
  timestamp = {Tue, 06 Nov 2018 12:51:35 +0100},
  biburl    = {https://dblp.org/rec/journals/cacm/LarusH10.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{typed_assembly,
  author    = {J. Gregory Morrisett and
               Karl Crary and
               Neal Glew and
               David Walker},
  title     = {Stack-based typed assembly language},
  journal   = {J. Funct. Program.},
  volume    = {13},
  number    = {5},
  pages     = {957--959},
  year      = {2003},
  url       = {https://doi.org/10.1017/S0956796802004446},
  doi       = {10.1017/S0956796802004446},
  timestamp = {Sat, 27 May 2017 14:24:34 +0200},
  biburl    = {https://dblp.org/rec/journals/jfp/MorrisettCGW03.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Jones-al:POPL79,
 author = {Jones, Neil D. and Muchnick, Steven S.},
 title = {Flow Analysis and Optimization of {LISP}-like Structures},
 booktitle = {POPL},
 year = {1979},
}

@inproceedings{10.1145/512950.512973,
author = {Cousot, Patrick and Cousot, Radhia},
title = {Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints},
year = {1977},
isbn = {9781450373500},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/512950.512973},
doi = {10.1145/512950.512973},
abstract = {A program denotes computations in some universe of objects. Abstract interpretation
of programs consists in using that denotation to describe computations in another
universe of abstract objects, so that the results of abstract execution give some
information on the actual computations. An intuitive example (which we borrow from
Sintzoff [72]) is the rule of signs. The text -1515 * 17 may be understood to denote
computations on the abstract universe {(+), (-), (¬±)} where the semantics of arithmetic
operators is defined by the rule of signs. The abstract execution -1515 * 17 ‚Üí -(+)
* (+) ‚Üí (-) * (+) ‚Üí (-), proves that -1515 * 17 is a negative number. Abstract interpretation
is concerned by a particular underlying structure of the usual universe of computations
(the sign, in our example). It gives a summary of some facets of the actual executions
of a program. In general this summary is simple to obtain but inaccurate (e.g. -1515
+ 17 ‚Üí -(+) + (+) ‚Üí (-) + (+) ‚Üí (¬±)). Despite its fundamentally incomplete results
abstract interpretation allows the programmer or the compiler to answer questions
which do not need full knowledge of program executions or which tolerate an imprecise
answer, (e.g. partial correctness proofs of programs ignoring the termination problems,
type checking, program optimizations which are not carried in the absence of certainty
about their feasibility, ‚Ä¶).},
booktitle = {Proceedings of the 4th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
pages = {238‚Äì252},
numpages = {15},
location = {Los Angeles, California},
series = {POPL '77}
}

@article{DBLP:journals/corr/abs-2105-00033,
  author    = {Matthew Kolosick and
               Shravan Narayan and
               Conrad Watt and
               Michael LeMay and
               Deepak Garg and
               Ranjit Jhala and
               Deian Stefan},
  title     = {Isolation Without Taxation: Near Zero Cost Transitions for {SFI}},
  journal   = {CoRR},
  volume    = {abs/2105.00033},
  year      = {2021},
  url       = {https://arxiv.org/abs/2105.00033},
  eprinttype = {arXiv},
  eprint    = {2105.00033},
  timestamp = {Wed, 12 May 2021 15:54:31 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2105-00033.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/pldi/HaasRSTHGWZB17,
  author    = {Andreas Haas and
               Andreas Rossberg and
               Derek L. Schuff and
               Ben L. Titzer and
               Michael Holman and
               Dan Gohman and
               Luke Wagner and
               Alon Zakai and
               J. F. Bastien},
  editor    = {Albert Cohen and
               Martin T. Vechev},
  title     = {Bringing the web up to speed with WebAssembly},
  booktitle = {Proceedings of the 38th {ACM} {SIGPLAN} Conference on Programming
               Language Design and Implementation, {PLDI} 2017, Barcelona, Spain,
               June 18-23, 2017},
  pages     = {185--200},
  publisher = {{ACM}},
  year      = {2017},
  url       = {https://doi.org/10.1145/3062341.3062363},
  doi       = {10.1145/3062341.3062363},
  timestamp = {Wed, 23 Jun 2021 15:34:31 +0200},
  biburl    = {https://dblp.org/rec/conf/pldi/HaasRSTHGWZB17.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/isca/DisselkoenRWGLS19,
  author    = {Craig Disselkoen and
               John Renner and
               Conrad Watt and
               Tal Garfinkel and
               Amit Levy and
               Deian Stefan},
  title     = {Position Paper: Progressive Memory Safety for WebAssembly},
  booktitle = {Proceedings of the 8th International Workshop on Hardware and Architectural
               Support for Security and Privacy, HASP@ISCA 2019, June 23, 2019},
  pages     = {4:1--4:8},
  publisher = {{ACM}},
  year      = {2019},
  url       = {https://doi.org/10.1145/3337167.3337171},
  doi       = {10.1145/3337167.3337171},
  timestamp = {Fri, 09 Jul 2021 15:51:20 +0200},
  biburl    = {https://dblp.org/rec/conf/isca/DisselkoenRWGLS19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/ndss/MettlerWC10,
  author    = {Adrian Mettler and
               David A. Wagner and
               Tyler Close},
  title     = {Joe-E: {A} Security-Oriented Subset of Java},
  booktitle = {Proceedings of the Network and Distributed System Security Symposium,
               {NDSS} 2010, San Diego, California, USA, 28th February - 3rd March
               2010},
  publisher = {The Internet Society},
  year      = {2010},
  url       = {https://www.ndss-symposium.org/ndss2010/joe-e-security-oriented-subset-java},
  timestamp = {Mon, 01 Feb 2021 08:42:23 +0100},
  biburl    = {https://dblp.org/rec/conf/ndss/MettlerWC10.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@InProceedings{prover-new,
author="Dill, David
and Grieskamp, Wolfgang
and Park, Junkil
and Qadeer, Shaz
and Xu, Meng
and Zhong, Emma",
editor="Fisman, Dana
and Rosu, Grigore",
title="Fast and Reliable Formal Verification of Smart Contracts with the Move Prover",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2022",
publisher="Springer International Publishing",
address="Cham",
pages="183--200",
abstract="The Move Prover (MVP) is a formal verifier for smart contracts written in the Move programming language. MVP has an expressive specification language, and is fast and reliable enough that it can be run routinely by developers and in integration testing. Besides the simplicity of smart contracts and the Move language, three implementation approaches are responsible for the practicality of MVP: (1) an alias-free memory model, (2) fine-grained invariant checking, and (3) monomorphization. The entirety of the Move code for the Diem blockchain has been extensively specified and can be completely verified by MVP in a few minutes. Changes in the Diem framework must be successfully verified before being integrated into the open source repository on GitHub.",
isbn="978-3-030-99524-9"
}


@article{rsmove-app,
  author    = {Marco Patrignani and
               Sam Blackshear},
  title     = {Robust Safety for Move},
  journal   = {CoRR},
  volume    = {abs/2110.05043},
  year      = {2021},
  url       = {https://arxiv.org/abs/2110.05043},
  eprinttype = {arXiv},
  eprint    = {2110.05043},
  timestamp = {Thu, 21 Oct 2021 16:20:08 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2110-05043.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/corr/abs-2109-06557,
  author    = {Bertrand Meyer and
               Alisa Arkadova and
               Alexander Kogtenkov and
               Alexandr Naumchev},
  title     = {The concept of class invariant in object-oriented programming},
  journal   = {CoRR},
  volume    = {abs/2109.06557},
  year      = {2021},
  url       = {https://arxiv.org/abs/2109.06557},
  eprinttype = {arXiv},
  eprint    = {2109.06557},
  timestamp = {Thu, 14 Oct 2021 09:16:01 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2109-06557.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{blackshear2022borrow,
      title={The Move Borrow Checker},
      author={Sam Blackshear and John Mitchell and Todd Nowacki and Shaz Qadeer},
      year={2022},
      eprint={2205.05181},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}
